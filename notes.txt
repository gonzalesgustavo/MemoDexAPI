Db Model:
    - Websites:
        url -> String
        type -> String
        emailUsed -> String (email validation)
        usernameUsed -> String
        pwdHint -> String
    - Contacts:
        firstName -> String
        lastName -> String
        relationship -> String
        notes -> String
        contact: {
            email -> String (email validation)
            mobile -> String
            work -> String
            home -> String
            twitter -> String
            facebook -> String
            linkedin -. String
            instagram -> String
            website -> String
        }
    - Notes:
        text -> String
        date -> Date 
        tags -> Array
    - Users:
        name -> String
        email -> String (email validation)
        username -> String
        pwd -> String (Encrypted)

To-Do:

    [ x ] Initial Setup
    [ x ] Setup basic server
    [ x ] Setup API routes
    [ x ] Setup controllers
    [ x ] Link controllers to routes
    [ x ] Create Database
    [ x ] Impliment Database in Controllers using Models
    [ x ] Setup Models
    [ x ] Link models to controllers
    [ x ] Setup responses
    [  ] Test routes
    [  ] Add comments

mongo db container id:
89622ad01520

test data ids:
5df7ed5ac9914e09ef56aeb3

const token = sign({ _id: user._id }, process.env.JWT_SECRET, {
      expiresIn: "1h"
    });
    res.header("authorization", token);

    module.exports = (req, res, next) => {
    const token = req.header("authorization");
    if (!token) return res.status(401).send("Accesss Denied!");
    try {
        const verified = verify(token, config.jwtSecret);
        req.user = verified;
        next();
    } catch (error) {
        return res.status(400).send("Invalid Token");
    }
};